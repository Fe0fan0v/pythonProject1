WINNING_TOKEN = {1: (20, 165), 2: (90, 165), 3: (160, 165), 4: (230, 165), 5: (300, 165), 6: (370, 165), 7: (440, 165)}
SEAS = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 53, 54, 55, 56, 57, 58, 59, 60, 61]
ALL_TERRITORIES = {
    'Ледовый залив': 1, 'Закатное море': 2, 'Залив Железных Людей': 3, 'Золотой пролив': 4,
    'Западное летнее море': 5, 'Пролив Редвин': 6, 'Восточное летнее море': 7, 'Дорнийское море': 8,
    'Губительные валы': 9, 'Черноводный залив': 10, 'Узское море': 11, 'Укус': 12, 'Дрожащее море': 13,
    'Чёрный замок': 14, 'Кархолд': 15, 'Винтерфелл': 16, 'Каменный берег': 17, 'Белая гавань': 18,
    'Вдовий дозор': 19, 'Ров Кейлин': 20, 'Близнецы': 21, 'Персты': 22, 'Лунные горы': 23, 'Долина Аррен': 24,
    'Орлиное гнездо': 25, 'Пайк': 26, 'Кремень': 27, 'Сероводье': 28, 'Сигард': 29, 'Риверран': 30, 'Ланниспорт': 31,
    'Каменная септа': 32, 'Харренхолл': 33, 'Черноводная': 34, 'Приморские марки': 35, 'Хайгарден': 36, 'Простор': 37,
    'Дорнские марки': 38, 'Принцев перевал': 39, 'Старомест': 40, 'Три башни': 41, 'Звездопад': 42, 'Солёный берег': 43,
    'Солнечное копьё': 44, 'Айронвуд': 45, 'Костяной путь': 46, 'Штормовой предел': 47, 'Королевский лес': 48,
    'Королевская гавань': 49, 'Клешня': 50, 'Драконий камень': 51, 'Арбор': 52, 'Порт Винтерфелла': 53,
    'Порт Белой гавани': 54, 'Порт Пайка': 55, 'Порт Орлиного гнезда': 56, 'Порт Драконего камня': 57,
    'Порт Ланниспорта': 58, 'Порт Староместа': 59, 'Порт Солнечного копья': 60, 'Порт Штормового предела': 61}
TERRITORY_DICT = {
    52: (65, 324), 40: (235, 400), 41: (160, 460), 42: (114, 566), 45: (155, 666), 43: (110, 775), 44: (154, 832),
    39: (230, 530), 46: (278, 646), 38: (295, 533), 36: (380, 454), 47: (344, 786), 48: (430, 785), 37: (404, 610),
    35: (484, 440), 34: (530, 610), 49: (505, 730), 50: (620, 780), 32: (588, 505), 31: (630, 430), 30: (725, 595),
    33: (610, 670), 51: (590, 963), 26: (790, 320), 29: (851, 506), 21: (820, 620), 23: (706, 710),
    25: (715, 810), 24: (800, 820), 22: (852, 770), 20: (900, 580), 28: (922, 518), 27: (929, 342), 17: (1063, 408),
    16: (1087, 585), 18: (1100, 700), 19: (1077, 824), 15: (1257, 855), 14: (1375, 625), 5: (380, 280), 6: (200, 290),
    1: (1230, 300), 2: (620, 250), 3: (700, 300), 4: (600, 320), 7: (50, 930), 8: (230, 820), 9: (390, 960),
    10: (575, 820), 11: (880, 955), 12: (920, 670), 13: (1200, 960), 53: (1285, 440), 54: (980, 710), 55: (820, 413),
    56: (745, 915), 57: (525, 965), 58: (625, 375), 59: (262, 330), 60: (135, 935), 61: (335, 850)}
NEIGHBORING_TERRITORIES = {
    1: [14, 16, 17, 28, 27, 2, 53], 2: [1, 3, 4, 5, 27, 35], 3: [2, 4, 26, 27, 28, 29, 30, 55],
    4: [2, 3, 30, 31, 35, 58],
    5: [2, 6, 7, 35, 36, 41, 42], 6: [5, 36, 40, 41, 52, 59], 7: [5, 8, 9, 42, 43, 44, 47, 60], 8: [7, 44, 45, 46, 47],
    9: [7, 10, 11, 47, 48, 50, 51, 57, 61], 10: [9, 48, 49, 50], 11: [9, 12, 13, 50, 25, 24, 23, 22, 19, 56], 57: [7],
    12: [11, 18, 19, 20, 21, 22, 54], 13: [11, 14, 15, 16, 18, 19], 14: [1, 13, 15, 16], 15: [13, 14, 16], 58: [4],
    16: [1, 13, 14, 15, 17, 18, 20], 17: [1, 16], 18: [12, 13, 16, 20, 19], 19: [11, 12, 13, 18], 59: [6],
    20: [12, 16, 18, 21, 28, 29], 21: [12, 22, 20, 29, 23], 22: [11, 12, 21, 23, 24], 23: [11, 21, 22, 24, 25, 50],
    24: [11, 22, 23, 25], 25: [11, 23, 24], 26: [3], 27: [1, 2, 3, 28], 28: [1, 3, 27, 29, 20], 29: [3, 28, 20, 21, 30],
    30: [3, 4, 29, 31, 32, 33], 31: [4, 30, 32, 35], 32: [30, 31, 33, 34, 35], 33: [30, 32, 34, 50], 60: [7],
    34: [32, 33, 35, 37, 49, 50], 35: [2, 4, 5, 31, 32, 34, 36, 37], 36: [5, 6, 35, 37, 38, 40], 61: [9],
    37: [34, 35, 36, 38, 46, 48, 49], 38: [36, 37, 46, 39, 40, 41], 39: [38, 41, 46, 45, 42], 40: [6, 36, 38, 41],
    41: [5, 6, 40, 38, 39], 42: [5, 7, 39, 43, 45], 43: [7, 42, 44, 45], 44: [7, 8, 43, 45], 52: [5, 6],
    45: [8, 39, 42, 43, 44, 46], 46: [8, 45, 39, 47, 38, 37, 48], 47: [7, 8, 9, 46, 48], 48: [9, 10, 47, 46, 37, 49],
    49: [10, 48, 37, 34, 50], 50: [9, 10, 11, 49, 34, 33, 23], 51: [9], 53: [1], 54: [12], 55: [3], 56: [11]}
ASTRA_TERRITORIES = {14: 1, 15: 1, 16: 1, 21: 1, 24: 1, 25: 1, 26: 1, 29: 1, 30: 1, 32: 1, 33: 1, 38: 1, 39: 1,
                     44: 1, 46: 1, 48: 1, 49: 2, 51: 1, 52: 1}
BARREL_TERRITORIES = {16: 1, 17: 1, 19: 1, 22: 1, 23: 1, 25: 1, 26: 1, 28: 1, 29: 1, 30: 1, 31: 2, 34: 2, 35: 1,
                      36: 2, 39: 1, 41: 1, 42: 1, 43: 1, 44: 1, 48: 1, 51: 1}
CASTLE_TERRITORIES = [16, 18, 20, 24, 25, 26, 27, 29, 30, 31, 33, 36, 37, 40, 42, 44, 45, 47, 49, 50, 51]
CASTLES = [18, 20, 24, 27, 33, 37, 42, 45, 47, 50]
FORTRESSES = [16, 25, 26, 29, 30, 31, 36, 40, 44, 49, 51]
fraction_dict = {'blue.png': 'Аррен', 'red.png': 'Ланнистер', 'black.png': 'Гренджой', 'green.png': 'Тирелл',
                 'orange.png': 'Мартелл', 'white.png': 'Старк', 'yellow.png': 'Баратеон'}
DICT = {'Аррен': 'blue', 'Ланнистер': 'red', 'Гренджой': 'black', 'Тирелл': 'green', 'Мартелл': 'orange',
        'Старк': 'white', 'Баратеон': 'yellow'}
dict_colors = {'blue': (60, 115, 168), 'black': (20, 21, 26), 'yellow': (85, 81, 33), 'red': (90, 28, 29),
                   'white': (85, 84, 92), 'green': (15, 48, 27), 'orange': (86, 62, 28)}
astra_dict = {'green': 7, 'black': 7, 'white': 7, 'yellow': 7, 'red': 7, 'blue': 7, 'orange': 7}
dictionary = {'blue': 'Аррен', 'red': 'Ланнистер', 'black': 'Гренджой', 'green': 'Тирелл', 'orange': 'Мартелл',
              'white': 'Старк', 'yellow': 'Баратеон'}
HEROES_DICT = {
    'airon': 'Эйерон Серовсласый', 'asha': 'Аша Гренджой', 'auron': 'Эурон Вороний Глаз', 'baylon': 'Бейлон Гренджой',
    'dagmer': 'Дагмер Битый Рот', 'teon': 'Теон Гренджой', 'victarion': 'Виктарион Гренджой',
    'anya': 'Анья Уэнйвуд', 'godrik': 'Годрик Боррел', 'harry': 'Гарри Хардинг', 'john': 'Бронзовый Джон Ройс',
    'lisa': 'Лиза Аррен', 'robert': 'Роберт Аррен', 'sirvardis': 'Сир Вардис Иген', 'alister': 'Алистер Флорент',
    'mace': 'Мейс Тирелл', 'margeri': 'Маргери Тирелл', 'queen': 'Королева Шипов', 'rendill': 'Рэндилл Тарли',
    'sirgerlan': 'Сир Гарлан Тирелл', 'sirlores': 'Сир Лорас Тирелл', 'arianna': 'Арианна Мартелл',
    'doran': 'Доран Мартелл', 'gerold': 'Герольд Тёмная Звезда', 'nimeria': 'Нимерия Сэнд', 'obara': 'Обара Сэнд',
    'oberin': 'Оберин Красная Гадюка', 'oreo': 'Орео Хотах', 'ped': 'Пёс', 'serseia': 'Серсея Ланнистер',
    'sirgregor': 'Сир Грегор Клиган', 'sirjaime': 'Сир Джейме Ланнистер', 'sirkivan': 'Сир Киван Ланнистер',
    'taiven': 'Тайвин Ланнистер', 'terion': 'Тирион Ланнистер', 'bigjohn': 'Большой Джон Амбер',
    'brinden': 'Бринден Чёрная Рыба', 'eddard': 'Эддард Старк', 'kaitiline': 'Кейтилин Старк', 'robb': 'Робб Старк',
    'ruse': 'Русе Болтон', 'sirrodrik': 'Сир Родрик Кассель', 'brienna': 'Бриенна Тарт', 'mellisandra': 'Мелисандра',
    'pestryak': 'Пестряк', 'renly': 'Ренли Баратеон', 'sallador': 'Салладор Саан', 'sirdavos': 'Сир Давос Сиворт',
    'stannis': 'Станнис Баратеон'
}
colors = {'martell.png': 'orange', 'tyrell.png': 'green', 'stark.png': 'white', 'grendjoy.png': 'black',
          'lannister.png': 'red', 'arren.png': 'blue', 'baratheon.png': 'yellow'}
# def sea_territories(start, end):
#    dictin = {}
#    for key, value in TERRITORY_DICT.items():
#        dictin[value] = key
#    for i in all_sprites:
#        if i.fraction == MY_ARMY and ALL_TERRITORIES[dictin[i.rect]] in NEIGHBORING_TERRITORIES[start]:
#            if end in NEIGHBORING_TERRITORIES[ALL_TERRITORIES[dictin[i.rect]]]:
#                return ''
#

# def definition(start, end):
#    f_1, f_2 = False, False
#    if ALL_TERRITORIES[start] in SEAS and ALL_TERRITORIES[end] in SEAS:
#        if ALL_TERRITORIES[end] in NEIGHBORING_TERRITORIES[ALL_TERRITORIES[start]]:
#            return 'Поплыли'
#        else:
#            return 'Не поплывём'
#    if ALL_TERRITORIES[end] in NEIGHBORING_TERRITORIES[ALL_TERRITORIES[start]]:
#        return 'Пошли пешочком'
#    else:
#        for i in NEIGHBORING_TERRITORIES[ALL_TERRITORIES[start]]:
#            if i in SEAS:
#                f_1 = True
#        for i in NEIGHBORING_TERRITORIES[ALL_TERRITORIES[end]]:
#            if i in SEAS:
#                f_2 = True
#        if f_1 and f_2:
#            sea_territories(ALL_TERRITORIES[start], ALL_TERRITORIES[end])
#        else:
#            return 'Ошибочка'
#
#
# print(definition('Старомест', 'Пайк'))
